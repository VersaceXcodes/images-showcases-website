{
  "tech_stack": [
    "React",
    "Vite", 
    "TypeScript",
    "Express.js",
    "PostgreSQL",
    "Node.js",
    "Zustand",
    "React Query",
    "Tailwind CSS",
    "Radix UI",
    "Socket.io",
    "JWT Authentication",
    "Multer",
    "Zod Validation"
  ],
  "features": [
    {
      "name": "User Authentication",
      "description": "Complete login/logout system with JWT tokens, registration, and session management",
      "files": [
        "src/components/views/UV_LogInSignUp.tsx",
        "src/store/main.tsx",
        "backend/server.ts"
      ]
    },
    {
      "name": "Image Gallery & Showcase",
      "description": "Browse and view image showcases with search, filtering, and detailed views",
      "files": [
        "src/components/views/UV_Homepage.tsx",
        "src/components/views/UV_Explore.tsx",
        "src/components/views/UV_SingleImageView.tsx",
        "src/components/views/UV_FeaturedGalleries.tsx"
      ]
    },
    {
      "name": "Image Upload",
      "description": "Upload images with metadata including title, description, and tags",
      "files": [
        "src/components/views/UV_ImageUpload.tsx",
        "backend/server.ts"
      ]
    },
    {
      "name": "User Profiles",
      "description": "View and manage user profiles with personal information and portfolio links",
      "files": [
        "src/components/views/UV_UserProfile.tsx",
        "src/components/views/UV_UserDashboard.tsx"
      ]
    },
    {
      "name": "Social Features",
      "description": "Like images, comment on posts, and follow other users",
      "files": [
        "backend/server.ts",
        "src/store/main.tsx"
      ]
    },
    {
      "name": "Real-time Notifications",
      "description": "WebSocket-based notifications for likes, comments, and follows",
      "files": [
        "src/components/views/UV_Notifications.tsx",
        "src/store/main.tsx",
        "backend/server.ts"
      ]
    },
    {
      "name": "Navigation & Layout",
      "description": "Responsive navigation with authentication-aware menu and footer",
      "files": [
        "src/components/views/GV_TopNav.tsx",
        "src/components/views/GV_Footer.tsx",
        "src/App.tsx"
      ]
    },
    {
      "name": "Search & Discovery",
      "description": "Search images by title, description, and categories with sorting options",
      "files": [
        "src/components/views/UV_SearchResults.tsx",
        "backend/server.ts"
      ]
    }
  ],
  "database_tables": [
    "users",
    "images", 
    "image_tags",
    "comments",
    "likes",
    "follows",
    "collections",
    "notifications"
  ],
  "api_endpoints": [
    "/api/auth/register",
    "/api/auth/login", 
    "/api/images",
    "/api/images/search",
    "/api/comments",
    "/api/likes",
    "/api/follows",
    "/api/users/:user_id",
    "/api/notifications"
  ],
  "key_libraries": {
    "state_management": "Zustand with persistence",
    "data_fetching": "@tanstack/react-query",
    "routing": "react-router-dom",
    "styling": "Tailwind CSS with Radix UI components",
    "forms": "react-hook-form with Zod validation",
    "real_time": "Socket.io for WebSocket connections",
    "file_upload": "Multer for handling multipart/form-data"
  },
  "architecture_notes": [
    "Single Page Application (SPA) with client-side routing",
    "RESTful API with Express.js backend",
    "JWT-based authentication with token persistence",
    "Real-time features using WebSocket connections",
    "File uploads stored locally with URL references in database",
    "Responsive design with mobile-first approach",
    "Protected routes requiring authentication",
    "Error handling and loading states throughout the application"
  ]
}