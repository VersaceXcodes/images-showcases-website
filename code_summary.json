{
  "tech_stack": [
    "React",
    "TypeScript", 
    "Vite",
    "Express.js",
    "PostgreSQL",
    "Node.js",
    "Tailwind CSS",
    "Zustand",
    "React Query",
    "Socket.io",
    "JWT Authentication",
    "Axios",
    "React Router",
    "Radix UI",
    "Zod"
  ],
  "features": [
    {
      "name": "User Authentication",
      "description": "Complete login/logout system with JWT tokens, registration, and session management",
      "files": [
        "vitereact/src/components/views/UV_LogInSignUp.tsx",
        "vitereact/src/store/main.tsx",
        "backend/server.ts"
      ]
    },
    {
      "name": "Image Gallery & Showcase",
      "description": "Browse and view image galleries with search functionality and categorization",
      "files": [
        "vitereact/src/components/views/UV_Homepage.tsx",
        "vitereact/src/components/views/UV_Explore.tsx",
        "vitereact/src/components/views/UV_SingleImageView.tsx"
      ]
    },
    {
      "name": "Image Upload",
      "description": "Protected route for authenticated users to upload images with metadata",
      "files": [
        "vitereact/src/components/views/UV_ImageUpload.tsx",
        "backend/server.ts"
      ]
    },
    {
      "name": "User Profiles",
      "description": "User profile pages displaying user information and their uploaded content",
      "files": [
        "vitereact/src/components/views/UV_UserProfile.tsx",
        "vitereact/src/components/views/UV_UserDashboard.tsx"
      ]
    },
    {
      "name": "Social Features",
      "description": "Comments, likes, and follow functionality for user interaction",
      "files": [
        "backend/server.ts"
      ]
    },
    {
      "name": "Real-time Notifications",
      "description": "WebSocket-based notification system for user interactions",
      "files": [
        "vitereact/src/components/views/UV_Notifications.tsx",
        "vitereact/src/store/main.tsx",
        "backend/server.ts"
      ]
    },
    {
      "name": "Navigation System",
      "description": "Responsive navigation with authentication-aware menu and user dropdown",
      "files": [
        "vitereact/src/components/views/GV_TopNav.tsx",
        "vitereact/src/components/views/GV_Footer.tsx"
      ]
    },
    {
      "name": "Featured Galleries",
      "description": "Curated gallery showcases and featured content display",
      "files": [
        "vitereact/src/components/views/UV_FeaturedGalleries.tsx"
      ]
    },
    {
      "name": "Search & Discovery",
      "description": "Image search functionality with filtering and sorting capabilities",
      "files": [
        "vitereact/src/components/views/UV_SearchResults.tsx",
        "backend/server.ts"
      ]
    }
  ],
  "database_tables": [
    "users",
    "images", 
    "image_tags",
    "comments",
    "likes",
    "follows",
    "collections",
    "notifications"
  ],
  "api_endpoints": [
    "POST /auth/register",
    "POST /auth/login", 
    "POST /images",
    "GET /images/search",
    "POST /comments",
    "POST /likes", 
    "POST /follows",
    "GET /notifications"
  ],
  "key_components": [
    {
      "name": "App.tsx",
      "description": "Main application component with routing and authentication logic"
    },
    {
      "name": "store/main.tsx", 
      "description": "Zustand store managing authentication state and user data"
    },
    {
      "name": "UV_Homepage.tsx",
      "description": "Landing page displaying image showcases with search integration"
    },
    {
      "name": "UV_LogInSignUp.tsx",
      "description": "Authentication forms for login and registration"
    },
    {
      "name": "GV_TopNav.tsx",
      "description": "Main navigation component with user dropdown and auth-aware menu"
    }
  ],
  "architecture_notes": [
    "Single Page Application (SPA) with client-side routing",
    "RESTful API with WebSocket support for real-time features",
    "JWT-based authentication with persistent storage",
    "Component-based architecture with TypeScript for type safety",
    "Responsive design using Tailwind CSS",
    "State management with Zustand for simplicity",
    "React Query for server state management and caching",
    "Protected routes requiring authentication",
    "File upload handling with multer on backend"
  ]
}